{{ $zoom := parseint .globals.zoom }}


{{- $layout := slice .layout -}}
{{- $newsprites := slice .new_sprites -}}
{{- $animated := slice .animated -}}
{{- $manual_ttd_len := .manual_ttd_len -}}
{{- $man_ttd_len := slice .manual_ttd_len -}}
{{- $len := .ttd_len -}}{{- $plen := parseint .ttd_len -}}{{- $bpp := .globals.bpp -}}
{{$speed := parseint .speed -}}

spriteset(spriteset_{{.id}}_purchase, "1x/{{.id}}_purchase.png")
{ template_purchase_1x() }

alternative_sprites(spriteset_{{.id}}_purchase, ZOOM_LEVEL_IN_2X, BIT_DEPTH_8BPP, "2x/{{.id}}_purchase.png")
{ template_purchase_2x() }

{{- range $index, $element := $layout -}}
{{- $newsprite := index $newsprites $index -}}
{{- if eq $newsprite "1" -}}
{{if $manual_ttd_len }}{{$len = index $man_ttd_len $index }}{{end}}

{{$template := concat "template_auto_" $len -}}
{{if eq $bpp "32"}}{{ altsprites $element $template $zoom }}{{else}}{{ altsprites8 $element $template $zoom }}{{end}}

{{$template_turn := concat "template_auto_turn_1_" $len -}}
{{if eq $bpp "32"}}{{ altspritesn $element $template_turn $zoom "_turn_1" }}{{else}}{{ altsprites8n $element $template_turn $zoom "_turn_1" }}{{end}}

{{$template_turn = concat "template_auto_turn_2_" $len -}}
{{if eq $bpp "32"}}{{ altspritesn $element $template_turn $zoom "_turn_2" }}{{else}}{{ altsprites8n $element $template_turn $zoom "_turn_2" }}{{end}}

{{$template_turn = concat "template_auto_up_" $len -}}{{$hill := concat $element "_up" }}
{{if eq $bpp "32"}}{{ altsprites $hill $template_turn $zoom }}{{else}}{{ altsprites8 $hill $template_turn $zoom }}{{end}}

{{$template_turn = concat "template_auto_down_" $len -}}{{$hill = concat $element "_down" }}
{{if eq $bpp "32"}}{{ altsprites $hill $template_turn $zoom }}{{else}}{{ altsprites8 $hill $template_turn $zoom }}{{end}}

{{$plen = parseint $len}}
{{ if gt $plen 8}}
{{$sections := concat $element "_sections" -}}
{{$template_turn = concat "template_auto_front_" $len -}}
{{if eq $bpp "32"}}{{ altspritesn $sections $template_turn $zoom "_front" }}{{else}}{{ altsprites8n $sections $template_turn $zoom "_front" }}{{end}}
{{$template_turn = concat "template_auto_mid_" $len -}}
{{if eq $bpp "32"}}{{ altspritesn $sections $template_turn $zoom "_mid" }}{{else}}{{ altsprites8n $sections $template_turn $zoom "_mid" }}{{end}}
{{$template_turn = concat "template_auto_rear_" $len -}}
{{if eq $bpp "32"}}{{ altspritesn $sections $template_turn $zoom "_rear" }}{{else}}{{ altsprites8n $sections $template_turn $zoom "_rear" }}{{end}}
{{end}}

{{- if and (gt (len $animated) $index) (eq (index $animated $index) "1") -}}
{{ $ani := concat $element "_anim_1" }}{{ altsprites8 $ani $template $zoom }}
{{$template_turn := concat "template_auto_turn_1_" $len -}}{{ altsprites8n $ani $template_turn $zoom "_turn_1" }}
{{$template_turn = concat "template_auto_turn_2_" $len -}}{{ altsprites8n $ani $template_turn $zoom "_turn_2" }}
{{$template_turn = concat "template_auto_up_" $len -}}{{$hill := concat $ani "_up" }}{{ altsprites8 $hill $template_turn $zoom }}
{{$template_turn = concat "template_auto_down_" $len -}}{{$hill = concat $ani "_down" }}{{ altsprites8 $hill $template_turn $zoom }}
{{if gt $plen 8}}
{{$template_turn = concat "template_auto_front_" $len -}}{{$sections := concat $ani "_sections" -}}{{ altsprites8n $sections $template_turn $zoom "_front" }}
{{$template_turn = concat "template_auto_mid_" $len -}}{{$sections = concat $ani "_sections" -}}{{ altsprites8n $sections $template_turn $zoom "_mid" }}
{{$template_turn = concat "template_auto_rear_" $len -}}{{$sections = concat $ani "_sections" -}}{{ altsprites8n $sections $template_turn $zoom "_rear" }}
{{end}}
{{ $ani = concat $element "_anim_2" }}{{ altsprites8 $ani $template $zoom }}
{{$template_turn = concat "template_auto_turn_1_" $len -}}{{ altsprites8n $ani $template_turn $zoom "_turn_1" }}
{{$template_turn = concat "template_auto_turn_2_" $len -}}{{ altsprites8n $ani $template_turn $zoom "_turn_2" }}
{{$template_turn = concat "template_auto_up_" $len -}}{{$hill = concat $ani "_up" }}{{ altsprites8 $hill $template_turn $zoom }}
{{$template_turn = concat "template_auto_down_" $len -}}{{$hill = concat $ani "_down" }}{{ altsprites8 $hill $template_turn $zoom }}
{{if gt $plen 8}}
{{$template_turn = concat "template_auto_front_" $len -}}{{$sections := concat $ani "_sections" -}}{{ altsprites8n $sections $template_turn $zoom "_front" }}
{{$template_turn = concat "template_auto_mid_" $len -}}{{$sections = concat $ani "_sections" -}}{{ altsprites8n $sections $template_turn $zoom "_mid" }}
{{$template_turn = concat "template_auto_rear_" $len -}}{{$sections = concat $ani "_sections" -}}{{ altsprites8n $sections $template_turn $zoom "_rear" }}
{{end}}
{{ $ani = concat $element "_anim_3" }}{{ altsprites8 $ani $template $zoom }}
{{$template_turn = concat "template_auto_turn_1_" $len -}}{{ altsprites8n $ani $template_turn $zoom "_turn_1" }}
{{$template_turn = concat "template_auto_turn_2_" $len -}}{{ altsprites8n $ani $template_turn $zoom "_turn_2" }}
{{$template_turn = concat "template_auto_up_" $len -}}{{$hill = concat $ani "_up" }}{{ altsprites8 $hill $template_turn $zoom }}
{{$template_turn = concat "template_auto_down_" $len -}}{{$hill = concat $ani "_down" }}{{ altsprites8 $hill $template_turn $zoom }}
{{if gt $plen 8}}
{{$template_turn = concat "template_auto_front_" $len -}}{{$sections := concat $ani "_sections" -}}{{ altsprites8n $sections $template_turn $zoom "_front" }}
{{$template_turn = concat "template_auto_mid_" $len -}}{{$sections = concat $ani "_sections" -}}{{ altsprites8n $sections $template_turn $zoom "_mid" }}
{{$template_turn = concat "template_auto_rear_" $len -}}{{$sections = concat $ani "_sections" -}}{{ altsprites8n $sections $template_turn $zoom "_rear" }}
{{end}}
{{ $ani = concat $element "_anim_4" }}{{ altsprites8 $ani $template $zoom }}
{{$template_turn = concat "template_auto_turn_1_" $len -}}{{ altsprites8n $ani $template_turn $zoom "_turn_1" }}
{{$template_turn = concat "template_auto_turn_2_" $len -}}{{ altsprites8n $ani $template_turn $zoom "_turn_2" }}
{{$template_turn = concat "template_auto_up_" $len -}}{{$hill = concat $ani "_up" }}{{ altsprites8 $hill $template_turn $zoom }}
{{$template_turn = concat "template_auto_down_" $len -}}{{$hill = concat $ani "_down" }}{{ altsprites8 $hill $template_turn $zoom }}
{{if gt $plen 8}}
{{$template_turn = concat "template_auto_front_" $len -}}{{$sections := concat $ani "_sections" -}}{{ altsprites8n $sections $template_turn $zoom "_front" }}
{{$template_turn = concat "template_auto_mid_" $len -}}{{$sections = concat $ani "_sections" -}}{{ altsprites8n $sections $template_turn $zoom "_mid" }}
{{$template_turn = concat "template_auto_rear_" $len -}}{{$sections = concat $ani "_sections" -}}{{ altsprites8n $sections $template_turn $zoom "_rear" }}
{{end}}
{{end -}}
{{end -}}

{{end}}

{{- $type := .type }}{{$pantograph_unit := .pantograph_unit -}}{{- $id := .id}}
{{ if .pantograph_unit -}}{{template "pantograph_graphics" . }}{{end}}

// Articulation
switch(FEAT_TRAINS, SELF, switch_{{.id}}_articulation, extra_callback_info1) {
    0 .. ({{.cars}} * 3) - 1: {{.id}};
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

{{ if .manual_lengths }}
{{- $lengths := slice .manual_lengths }}
// This MU has different lengths per unit
switch (FEAT_TRAINS, SELF, switch_{{.id}}_length, position_in_articulated_veh % {{len $lengths}} ) 
{
    {{range $index, $element := $lengths -}}
    {{$index }}: return {{ $element }};
    {{end}}    
}
{{ else }}
// All parts of this MU are the same length
switch (FEAT_TRAINS, SELF, switch_{{.id}}_length, position_in_articulated_veh % 3 ) 
{
    {{range $index, $element := slice .articulated_lengths -}}
    {{$index }}: return {{ $element }};
    {{end}}    
}
{{end}}

{{range $index, $element := $layout -}}
{{- $newsprite := index $newsprites $index -}}
{{- if eq $newsprite "1" -}}
{{if $manual_ttd_len }}{{$len = index $man_ttd_len $index }}{{end}}{{$plen = parseint $len}}
{{if gt $plen 8}}{{template "curve_switch_long" $element }}{{else if gt $plen 4 }}{{template "curve_switch_medium" $element }}{{else}}{{template "curve_switch_short" $element }}{{end}}


{{- if and (gt (len $animated) $index) (eq (index $animated $index) "1") -}}
{{$anim := concat $element "_anim_1" }}
{{if gt $plen 8}}{{template "curve_switch_long" $anim }}{{else if gt $plen 4 }}{{template "curve_switch_medium" $anim }}{{else}}{{template "curve_switch_short" $anim }}{{end}}
{{$anim = concat $element "_anim_2" }}
{{if gt $plen 8}}{{template "curve_switch_long" $anim }}{{else if gt $plen 4 }}{{template "curve_switch_medium" $anim }}{{else}}{{template "curve_switch_short" $anim }}{{end}}
{{$anim = concat $element "_anim_3" }}
{{if gt $plen 8}}{{template "curve_switch_long" $anim }}{{else if gt $plen 4 }}{{template "curve_switch_medium" $anim }}{{else}}{{template "curve_switch_short" $anim }}{{end}}
{{$anim = concat $element "_anim_4" }}
{{if gt $plen 8}}{{template "curve_switch_long" $anim }}{{else if gt $plen 4 }}{{template "curve_switch_medium" $anim }}{{else}}{{template "curve_switch_short" $anim }}{{end}}

switch (FEAT_TRAINS, SELF, switch_{{$element}}_animation, motion_counter % 4) 
{
    0: switch_{{$element}}_anim_1_curve;
    1: switch_{{$element}}_anim_2_curve;
    2: switch_{{$element}}_anim_3_curve;
    3: switch_{{$element}}_anim_4_curve;
}

{{ if gt $plen 8}}
switch (FEAT_TRAINS, SELF, switch_{{$element}}_animation_front, motion_counter % 4) 
{
    0: switch_{{$element}}_anim_1_curve_front;
    1: switch_{{$element}}_anim_2_curve_front;
    2: switch_{{$element}}_anim_3_curve_front;
    3: switch_{{$element}}_anim_4_curve_front;
}
switch (FEAT_TRAINS, SELF, switch_{{$element}}_animation_rear, motion_counter % 4) 
{
    0: switch_{{$element}}_anim_1_curve_rear;
    1: switch_{{$element}}_anim_2_curve_rear;
    2: switch_{{$element}}_anim_3_curve_rear;
    3: switch_{{$element}}_anim_4_curve_rear;
}
{{end}}

switch(FEAT_TRAINS, SELF, switch_{{$element}}_animation_overlay, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: switch_{{$element}}_curve;
    1: switch_{{$element}}_animation;

    // This should never be executed
    return spriteset_invisible;
}

{{ if gt $plen 8}}
switch(FEAT_TRAINS, SELF, switch_{{$element}}_animation_overlay_front, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: switch_{{$element}}_curve_front;
    1: switch_{{$element}}_animation_front;

    // This should never be executed
    return spriteset_invisible;
}

switch(FEAT_TRAINS, SELF, switch_{{$element}}_animation_overlay_rear, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: switch_{{$element}}_curve_rear;
    1: switch_{{$element}}_animation_rear;

    // This should never be executed
    return spriteset_invisible;
}
{{end -}}
{{end -}}
{{end -}}
{{end -}}

{{- if .pantograph_unit -}}
{{template "pantograph_switch" . }}
{{end}}

{{template "running_cost_switch" . }}

switch (FEAT_TRAINS, SELF, switch_{{.id}}_graphics, position_in_articulated_veh % ({{.cars}} * 3)) 
{
    {{- range $index, $element := $layout -}}
    {{if $manual_ttd_len }}{{$len = index $man_ttd_len $index }}{{end}}{{$plen = parseint $len}}

    {{- if eq $element $pantograph_unit }}
    ({{$index}} * 3) + 1: switch_{{$id}}_pantograph;
    {{ if gt $plen 8 -}}
    ({{$index}} * 3) + 0: switch_{{$id}}_pantograph_front;
    ({{$index}} * 3) + 2: switch_{{$id}}_pantograph_rear;
    {{- end }}
    {{- else if and (gt (len $animated) $index) (eq (index $animated $index) "1") }}
    ({{$index}} * 3) + 1: switch_{{$element}}_animation_overlay;
    {{- if gt $plen 8 }}
    ({{$index}} * 3) + 0: switch_{{$element}}_animation_overlay_front;
    ({{$index}} * 3) + 2: switch_{{$element}}_animation_overlay_rear;
    {{- end -}}
    {{- else }}
    ({{$index}} * 3) + 1: switch_{{$element}}_curve;
    {{- if gt $plen 8}}
    ({{$index}} * 3) + 0: switch_{{$element}}_curve_front;
    ({{$index}} * 3) + 2: switch_{{$element}}_curve_rear;
    {{ end -}}
    {{- end}}
    {{- end}}
    return spriteset_invisible;
}

{{template "visual_effect_power" . }}
{{if not .use_mu_engine_logic}}{{template "attach_mu_switch" .}}{{end}}

item(FEAT_TRAINS, {{.id}}, {{.numeric_id}}) {
    property {
        name:                         {{.name_string}};
        climates_available:           {{ if .enable_param }} {{.enable_param}} ? {{end}} ALL_CLIMATES {{ if .enable_param }} : NO_CLIMATE {{end}};
        introduction_date:            date({{.year}}, {{.intro_month}}, 5);
        model_life:                   {{if .service}}{{.lifespan}};{{else}}VEHICLE_NEVER_EXPIRES;{{end}}
        retire_early:                 -4;
        vehicle_life:                 {{.vehicle_life}};

        {{if eq .default_cargo "PASS" }}
        refittable_cargo_classes: bitmask(CC_PASSENGERS);
        cargo_allow_refit: [ YETI, YETY ]; 
        {{ else if eq .default_cargo "MAIL" }}
        refittable_cargo_classes: bitmask(CC_MAIL);
        {{end}}

        {{ if eq .type "steam" -}}
        engine_class:                 ENGINE_CLASS_STEAM;
        {{ else if eq .type "electric" -}}
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        {{ else if eq .type "tube" -}}
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        {{else -}}
        engine_class:                 ENGINE_CLASS_DIESEL;
        {{- end}}

        {{if .cargo_age_period}}cargo_age_period:             {{.cargo_age_period}};{{end}}
        running_cost_base:            RUNNING_COST_DIESEL;
        tractive_effort_coefficient:  {{.te_coeff}};

        power:                        {{.power}} hp;
        speed:                        {{.speed}} mph;
        reliability_decay:            20;
        {{if .loading_speed}}loading_speed:                {{.loading_speed}};{{end}}
        cost_factor:                  {{.cost}};
        running_cost_factor:          {{.running_cost}};
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        misc_flags:                   bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_MU {{if or (.pantograph_unit) (ge (len $animated) 1)}}, TRAIN_FLAG_SPRITE_STACK{{end}} {{ if .tilting }}, TRAIN_FLAG_TILT {{end}});
        refit_cost:                   0;
        track_type:                   {{ if eq .type "dual_power" -}}RAIL{{else}}{{.railtype}}{{end}};
        dual_headed:                0;

        {{if lt $speed 50 -}}
        air_drag_coefficient:         0.1;
        {{- end}}

        {{if .capacity}}
        cargo_capacity:               {{.capacity}} / 3;
        {{if ne .capacity "0"}}
        default_cargo_type:           {{.default_cargo}};
        {{end}}{{end}}
        weight:                       {{.weight}} ton;
        
    }

    graphics {
        default:  switch_{{.id}}_graphics;
        purchase:  spriteset_{{.id}}_purchase;
        additional_text: return {{.additional_text_string}};
        articulated_part: switch_{{.id}}_articulation;
        length: switch_{{.id}}_length;
        running_cost_factor: switch_{{.id}}_running_cost;
        purchase_running_cost_factor: return {{.running_cost}};
        visual_effect_and_powered: switch_{{.id}}_visual_effect;
        {{- if .secondary_speed }}
        speed: switch_{{.id}}_speed; 
        {{ end -}}
        {{if .secondary_power}}{{ if eq .type "dual_power" -}}power: switch_{{.id}}_power;{{end}}{{ if eq .type "dual_electric" -}}power: switch_{{.id}}_power;{{end}}{{end}}
        {{if .capacity}}purchase_cargo_capacity:  {{if .reuse_sprites}}spriteset_{{.reuse_sprites}}{{else}}spriteset_{{.id}}{{end}};{{end}}
        {{if not .use_mu_engine_logic}}can_attach_wagon: switch_{{.id}}_attach_wagons;{{end}}
    }
}
